Microsoft (R) Macro Assembler Version 14.29.30153.0	    12/18/23 05:03:26
main.asm						     Page 1 - 1


				INCLUDE Irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C INCLUDE VirtualKeys.inc
			      C ; VirtualKeys.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 
				INCLUDE file2byte.inc ; Include the file containing the prototype
			      C File2Byte PROTO, path:DWORD
			      C 
				INCLUDE encrypt.inc
			      C ecnryptOneByte proto, showBMP: dword, hideByte: byte
			      C HideTheFile proto, showBMP: dword, HideFile:dword,  BMPLen:dword, HideLen:dword, fileType: byte
			      C extractByte proto, showBMP: dword
			      C unHideTheFile proto, showBMP: dword, HideFile:dword,  BMPLen:dword, HideLen: dword
			      C 
				INCLUDE byte2file.inc
			      C byte2file proto, buffer: DWORD, bufSize: DWORD, fileType: byte, output: DWORD
			      C 
 00000000			.data

 00000000  000F4240 [		buffer_showBmp BYTE 1000000 dup(?)
	    00
	   ]
 000F4240  000F4240 [		buffer_hideFile BYTE 1000000 dup(?)
	    00
	   ]

 001E8480 43 3A 5C 73 74	filename BYTE "C:\steghide_assembly\steghide_assembly\files\test.bmp", 0
	   65 67 68 69 64
	   65 5F 61 73 73
	   65 6D 62 6C 79
	   5C 73 74 65 67
	   68 69 64 65 5F
	   61 73 73 65 6D
	   62 6C 79 5C 66
	   69 6C 65 73 5C
	   74 65 73 74 2E
	   62 6D 70 00
 001E84B6 43 61 6E 6E 6F	errMsg BYTE "Cannot create file", 0
	   74 20 63 72 65
	   61 74 65 20 66
	   69 6C 65 00
 001E84C9  00000100 [		file_path BYTE 256 dup (?) 
	    00
	   ]
				; 現在讀進來的是 File_path

 001E85C9 00000000		showBmpPtr dword ?
 001E85CD 00000000		showBmpPtrTemp dword ?
 001E85D1 00000000		showBmpLen dword ?
 001E85D5 00000000		hideFilePtr dword ?
 001E85D9 00000000		hideFileLen dword ?
 001E85DD 00			fileType byte ?
 001E85DE 00			lastChar byte ?
 001E85DF  000F4240 [		unHideFile byte 1000000 DUP(?);
	    00
	   ]
 002DC81F 00000000		unhideFileLen dword ?
 002DC823 00			unHideFileType byte ?
				;
 002DC824  00000100 [		inputBuffer BYTE 256 DUP(?) ;Used to store user input
	    00
	   ]
 002DC924 45 6E 74 65 72	prompt BYTE "Enter 'e' to encrypt/'d' to decrypt/'h' to look over more info: ", 0
	   20 27 65 27 20
	   74 6F 20 65 6E
	   63 72 79 70 74
	   2F 27 64 27 20
	   74 6F 20 64 65
	   63 72 79 70 74
	   2F 27 68 27 20
	   74 6F 20 6C 6F
	   6F 6B 20 6F 76
	   65 72 20 6D 6F
	   72 65 20 69 6E
	   66 6F 3A 20 00
 002DC965 49 6E 76 61 6C	errorMsg BYTE "Invalid input. Please enter 'e' or 'd'.", 0
	   69 64 20 69 6E
	   70 75 74 2E 20
	   50 6C 65 61 73
	   65 20 65 6E 74
	   65 72 20 27 65
	   27 20 6F 72 20
	   27 64 27 2E 00
 002DC98D 45 6E 74 65 72	encryptMsg BYTE "Enter the path of the image file: ", 0
	   20 74 68 65 20
	   70 61 74 68 20
	   6F 66 20 74 68
	   65 20 69 6D 61
	   67 65 20 66 69
	   6C 65 3A 20 00
 002DC9B0 45 6E 74 65 72	textMsg BYTE "Enter the path of the text file to hide: ", 0
	   20 74 68 65 20
	   70 61 74 68 20
	   6F 66 20 74 68
	   65 20 74 65 78
	   74 20 66 69 6C
	   65 20 74 6F 20
	   68 69 64 65 3A
	   20 00
 002DC9DA 45 6E 74 65 72	decryptMsg BYTE "Enter the path of the encrypted image file: ", 0
	   20 74 68 65 20
	   70 61 74 68 20
	   6F 66 20 74 68
	   65 20 65 6E 63
	   72 79 70 74 65
	   64 20 69 6D 61
	   67 65 20 66 69
	   6C 65 3A 20 00

 002DCA07 69 6E 74 72 6F	info1 BYTE "introduce:",13,10,0
	   64 75 63 65 3A
	   0D 0A 00
 002DCA14 20 20 20 20 74	introinfo BYTE "    this is our assembly language final project",13,10,0
	   68 69 73 20 69
	   73 20 6F 75 72
	   20 61 73 73 65
	   6D 62 6C 79 20
	   6C 61 6E 67 75
	   61 67 65 20 66
	   69 6E 61 6C 20
	   70 72 6F 6A 65
	   63 74 0D 0A 00
 002DCA46 63 72 65 61 74	info2 BYTE "creator:",13,10,0
	   6F 72 3A 0D 0A
	   00
 002DCA51 20 20 20 20 31	creatorinfo BYTE "    111403550",13,10,
	   31 31 34 30 33
	   35 35 30 0D 0A
	   20 20 20 20 31
	   31 31 34 30 33
	   35 35 32 0D 0A
	   20 20 20 20 31
	   31 31 34 30 33
	   30 35 39 0D 0A
	   20 20 20 20 31
	   31 31 34 30 33
	   35 31 36 0D 0A
	   00
				         "    111403552",13,10,
				         "    111403059",13,10,
				         "    111403516",13,10,0
 002DCA8E 65 78 70 6C 61	info3 BYTE "explantion of the instruction:",13,10,0
	   6E 74 69 6F 6E
	   20 6F 66 20 74
	   68 65 20 69 6E
	   73 74 72 75 63
	   74 69 6F 6E 3A
	   0D 0A 00
 002DCAAF 20 20 20 20 63	einfo BYTE "    choose letter e to hide a file into an image",13,10, 0
	   68 6F 6F 73 65
	   20 6C 65 74 74
	   65 72 20 65 20
	   74 6F 20 68 69
	   64 65 20 61 20
	   66 69 6C 65 20
	   69 6E 74 6F 20
	   61 6E 20 69 6D
	   61 67 65 0D 0A
	   00
 002DCAE2 20 20 20 20 63	dinfo BYTE "    choose letter d to acquire the hidden file from the encrypted image",13,10,13,10, 0
	   68 6F 6F 73 65
	   20 6C 65 74 74
	   65 72 20 64 20
	   74 6F 20 61 63
	   71 75 69 72 65
	   20 74 68 65 20
	   68 69 64 64 65
	   6E 20 66 69 6C
	   65 20 66 72 6F
	   6D 20 74 68 65
	   20 65 6E 63 72
	   79 70 74 65 64
	   20 69 6D 61 67
	   65 0D 0A 0D 0A
	   00
				;
 002DCB2E 00000082		startFrom dword 82h



 00000000			.code
 00000000			main PROC
 00000000			begin:
 00000000  BA 002DC924 R	    mov edx, OFFSET prompt
 00000005  E8 00000000 E	    call WriteString

				    ; Wait for user input
 0000000A  BA 002DC824 R	    mov edx, OFFSET inputBuffer
 0000000F  B9 00000100		    mov ecx, SIZEOF inputBuffer
 00000014  E8 00000000 E	    call ReadString

				    ; Check user input
 00000019  A0 002DC824 R	    mov al, [inputBuffer]
 0000001E  3C 65		    cmp al, 'e'
 00000020  74 59		    je  encryptFile
 00000022  3C 64		    cmp al, 'd'
 00000024  0F 84 0000016F	    je  decryptFile
 0000002A  3C 68		    cmp al, 'h'
 0000002C  74 05		    je  information
 0000002E  E9 000001F1		    jmp invalidInput

 00000033			information:
 00000033  BA 002DCA07 R	    mov edx, OFFSET info1
 00000038  E8 00000000 E	    call WriteString
 0000003D  BA 002DCA14 R	    mov edx, OFFSET introinfo
 00000042  E8 00000000 E	    call WriteString
 00000047  BA 002DCA46 R	    mov edx, OFFSET info2
 0000004C  E8 00000000 E	    call WriteString
 00000051  BA 002DCA51 R	    mov edx, OFFSET creatorinfo
 00000056  E8 00000000 E	    call WriteString
 0000005B  BA 002DCA8E R	    mov edx, OFFSET info3
 00000060  E8 00000000 E	    call WriteString
 00000065  BA 002DCAAF R	    mov edx, OFFSET einfo
 0000006A  E8 00000000 E	    call WriteString
 0000006F  BA 002DCAE2 R	    mov edx, OFFSET dinfo
 00000074  E8 00000000 E	    call WriteString
 00000079  EB 85		    jmp begin

 0000007B			encryptFile:
 0000007B  BA 002DC98D R	    mov edx, OFFSET encryptMsg
 00000080  E8 00000000 E	    call WriteString
 00000085  BA 001E84C9 R	    mov edx, OFFSET file_path
 0000008A  B9 000000FF		    mov ecx, LENGTHOF file_path-1
 0000008F  E8 00000000 E	    call ReadString
				    INVOKE File2Byte, ADDR file_path
 0000009E  8B F0		    mov esi, eax
 000000A0  8B CB		    mov ecx, ebx
 000000A2  89 1D 001E85D1 R	    mov showBmpLen, ebx
 000000A8  BF 00000000 R	    mov edi, OFFSET buffer_showBmp
 000000AD  F3/ A4		    rep movsb
 000000AF  C7 05 001E85C9 R	    mov showBmpPtr, OFFSET buffer_showBmp
	   00000000 R
 000000B9  BA 002DC9B0 R	    mov edx, OFFSET textMsg
 000000BE  E8 00000000 E	    call WriteString
 000000C3  BA 001E84C9 R	    mov edx, OFFSET file_path
 000000C8  B9 000000FF		    mov ecx, LENGTHOF file_path-1
 000000CD  E8 00000000 E	    call ReadString
 000000D2  8D 1D 001E84C9 R	    lea ebx, file_path
 000000D8  03 D8		    add ebx, eax
 000000DA  4B			    dec ebx
 000000DB  0F B6 03		    movzx eax, byte ptr [ebx]
 000000DE  A2 001E85DE R	    mov lastChar, al 
				    .IF lastChar=='t'
 000000EC  C6 05 001E85DD R	        mov fileType, 1
	   01
				    .ENDIF
				    .IF lastChar=='p'
 000000FC  C6 05 001E85DD R	        mov fileType, 2
	   02
				    .ENDIF
				    .IF lastChar=='g'
 0000010C  C6 05 001E85DD R	        mov fileType, 3
	   03
				    .ENDIF
				    .IF lastChar=='e'
 0000011C  C6 05 001E85DD R	        mov fileType, 4
	   04
				    .ENDIF
				    INVOKE File2Byte, ADDR file_path
 0000012D  8B F0		    mov esi, eax
 0000012F  8B CB		    mov ecx, ebx
 00000131  89 1D 001E85D9 R	    mov hideFileLen, ebx
 00000137  BF 000F4240 R	    mov edi, OFFSET buffer_hideFile
 0000013C  F3/ A4		    rep movsb
 0000013E  C7 05 001E85D5 R	    mov hideFilePtr, OFFSET buffer_hideFile
	   000F4240 R

				    ; 這行以下是加密
 00000148  A1 001E85C9 R	    mov eax, showBmpPtr
 0000014D  03 05 002DCB2E R	    add eax, startFrom
 00000153  A3 001E85CD R	    mov showBmpPtrTemp, eax

				    invoke HideTheFile , showBmpPtrTemp, hideFilePtr, showBmpLen, hideFileLen, fileType
				    ; 到這行是加密
				    invoke byte2file, showBmpPtr ,showBmpLen, fileType, 0
 00000194  E9 00000097		    jmp exitProgram

 00000199			decryptFile:
 00000199  BA 002DC9DA R	    mov edx, OFFSET decryptMsg
 0000019E  E8 00000000 E	    call WriteString
 000001A3  BA 001E84C9 R	    mov edx, OFFSET file_path
 000001A8  B9 000000FF		    mov ecx, LENGTHOF file_path-1
 000001AD  E8 00000000 E	    call ReadString
				    INVOKE File2Byte, ADDR file_path
 000001BC  8B F0		    mov esi, eax
 000001BE  8B CB		    mov ecx, ebx
 000001C0  89 1D 001E85D1 R	    mov showBmpLen, ebx
 000001C6  BF 00000000 R	    mov edi, OFFSET buffer_showBmp
 000001CB  F3/ A4		    rep movsb
 000001CD  C7 05 001E85C9 R	    mov showBmpPtr, OFFSET buffer_showBmp
	   00000000 R
				     ; 這行以下是解密
 000001D7  A1 001E85C9 R	    mov eax, showBmpPtr
 000001DC  03 05 002DCB2E R	    add eax, startFrom
 000001E2  A3 001E85CD R	    mov showBmpPtrTemp, eax

				    invoke unHideTheFile , showBmpPtrTemp, OFFSET  unHideFile, showBmpLen, 0

 000001FF  A3 002DC81F R	    mov unhideFileLen, eax
 00000204  88 1D 002DC823 R	    mov unHideFileType, bl
				    ; 到這行是解密
				    invoke byte2file, offset unHideFile, unhideFileLen, unHideFileType, 1
 00000222  EB 0C		    jmp exitProgram

 00000224			invalidInput:
 00000224  BA 002DC965 R	    mov edx, OFFSET errorMsg
 00000229  E8 00000000 E	    call WriteString
 0000022E  EB 00		    jmp exitProgram

 00000230			exitProgram:
				    ; Your program exit code here
				    exit

 00000237  C3			    ret
 00000238			main ENDP

				END main
Microsoft (R) Macro Assembler Version 14.29.30153.0	    12/18/23 05:03:26
main.asm						     Symbols 2 - 1




Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000008
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 DWord
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
FOCUS_EVENT_RECORD . . . . . . .	 00000004
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
FPU_ENVIRON  . . . . . . . . . .	 0000001C
  controlWord  . . . . . . . . .	 00000000	 Word
  statusWord . . . . . . . . . .	 00000004	 Word
  tagWord  . . . . . . . . . . .	 00000008	 Word
  instrPointerOffset . . . . . .	 0000000C	 DWord
  instrPointerSelector . . . . .	 00000010	 DWord
  operandPointerOffset . . . . .	 00000014	 DWord
  operandPointerSelector . . . .	 00000018	 Word
INPUT_RECORD . . . . . . . . . .	 00000014
  EventType  . . . . . . . . . .	 00000000	 Word
  Event  . . . . . . . . . . . .	 00000004	 XmmWord
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCommandId  . . . . . . . . .	 00000000	 DWord
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
KEY_EVENT_RECORD . . . . . . . .	 00000010
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
MENU_EVENT_RECORD  . . . . . . .	 00000004
  dwCommandId  . . . . . . . . .	 00000000	 DWord
MOUSE_EVENT_RECORD . . . . . . .	 00000010
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word
WINDOW_BUFFER_SIZE_RECORD  . . .	 00000004
  dwSize . . . . . . . . . . . .	 00000000	 DWord


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 002DCB32 Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 00000238 Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

CloseFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Clrscr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateOutputFile . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
File2Byte  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToDosDateTime  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToSystemTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatMessageA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetKeyState  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMaxXY . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeap . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapAlloc  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCreate . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapDestroy  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapFree . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSize . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HideTheFile  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalFree  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBoxAsk  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBox . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenInputFile  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseDecimal32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseInteger32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadDec  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFloat  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFromFile . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKeyFlush . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKey  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowFPUStack . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StrLength  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBinB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFloat . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHexB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrameName  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrame  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteToFile  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteWindowsMsg  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
byte2file  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ecnryptOneByte . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
extractByte  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 00000238 Public STDCALL
  begin  . . . . . . . . . . . .	L Near	 00000000 _TEXT	
  information  . . . . . . . . .	L Near	 00000033 _TEXT	
  encryptFile  . . . . . . . . .	L Near	 0000007B _TEXT	
  decryptFile  . . . . . . . . .	L Near	 00000199 _TEXT	
  invalidInput . . . . . . . . .	L Near	 00000224 _TEXT	
  exitProgram  . . . . . . . . .	L Near	 00000230 _TEXT	
printf . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
scanf  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
unHideTheFile  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
wsprintfA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
ALT_MASK . . . . . . . . . . . .	Number	 00000003h   
CAPSLOCK_ON  . . . . . . . . . .	Number	 00000080h   
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CTRL_MASK  . . . . . . . . . . .	Number	 0000000Ch   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
ENHANCED_KEY . . . . . . . . . .	Number	 00000100h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
FORMAT_MESSAGE_ALLOCATE_BUFFER .	Number	 00000100h   
FORMAT_MESSAGE_FROM_SYSTEM . . .	Number	 00001000h   
FormatMessage  . . . . . . . . .	Text   	 FormatMessageA
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GetCommandLine . . . . . . . . .	Text   	 GetCommandLineA
HANDLE . . . . . . . . . . . . .	Text   	 DWORD
HEAP_GENERATE_EXCEPTIONS . . . .	Number	 00000004h   
HEAP_GROWABLE  . . . . . . . . .	Number	 00000002h   
HEAP_NO_SERIALIZE  . . . . . . .	Number	 00000001h   
HEAP_REALLOC_IN_PLACE_ONLY . . .	Number	 00000010h   
HEAP_ZERO_MEMORY . . . . . . . .	Number	 00000008h   
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDCLOSE  . . . . . . . . . . . .	Number	 00000008h   
IDCONTINUE . . . . . . . . . . .	Number	 0000000Bh   
IDHELP . . . . . . . . . . . . .	Number	 00000009h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDTIMEOUT  . . . . . . . . . . .	Number	 00007D00h   
IDTRYAGAIN . . . . . . . . . . .	Number	 0000000Ah   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KBDOWN_FLAG  . . . . . . . . . .	Number	 00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
KEY_MASKS  . . . . . . . . . . .	Number	 0000001Fh   
LEFT_ALT_PRESSED . . . . . . . .	Number	 00000002h   
LEFT_CTRL_PRESSED  . . . . . . .	Number	 00000008h   
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_APPLMODAL . . . . . . . . . .	Number	 00000000h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONERROR . . . . . . . . . .	Number	 00000010h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000010h   
MB_ICONINFORMATION . . . . . . .	Number	 00000040h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_ICONWARNING . . . . . . . . .	Number	 00000030h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_TASKMODAL . . . . . . . . . .	Number	 00002000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NUMLOCK_ON . . . . . . . . . . .	Number	 00000020h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
RIGHT_ALT_PRESSED  . . . . . . .	Number	 00000001h   
RIGHT_CTRL_PRESSED . . . . . . .	Number	 00000004h   
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
SCROLLLOCK_ON  . . . . . . . . .	Number	 00000040h   
SHIFT_MASK . . . . . . . . . . .	Number	 00000010h   
SHIFT_PRESSED  . . . . . . . . .	Number	 00000010h   
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TAB  . . . . . . . . . . . . . .	Number	 00000009h   
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
VK_11  . . . . . . . . . . . . .	Number	 000000BDh   
VK_12  . . . . . . . . . . . . .	Number	 000000BBh   
VK_ADD . . . . . . . . . . . . .	Number	 0000006Bh   
VK_BACK  . . . . . . . . . . . .	Number	 00000008h   
VK_CANCEL  . . . . . . . . . . .	Number	 00000003h   
VK_CAPITAL . . . . . . . . . . .	Number	 00000014h   
VK_CLEAR . . . . . . . . . . . .	Number	 0000000Ch   
VK_CONTROL . . . . . . . . . . .	Number	 00000011h   
VK_DECIMAL . . . . . . . . . . .	Number	 0000006Eh   
VK_DELETE  . . . . . . . . . . .	Number	 0000002Eh   
VK_DIVIDE  . . . . . . . . . . .	Number	 0000006Fh   
VK_DOWN  . . . . . . . . . . . .	Number	 00000028h   
VK_END . . . . . . . . . . . . .	Number	 00000023h   
VK_ESCAPE  . . . . . . . . . . .	Number	 0000001Bh   
VK_EXECUTE . . . . . . . . . . .	Number	 0000002Bh   
VK_F10 . . . . . . . . . . . . .	Number	 00000079h   
VK_F11 . . . . . . . . . . . . .	Number	 0000007Ah   
VK_F12 . . . . . . . . . . . . .	Number	 0000007Bh   
VK_F13 . . . . . . . . . . . . .	Number	 0000007Ch   
VK_F14 . . . . . . . . . . . . .	Number	 0000007Dh   
VK_F15 . . . . . . . . . . . . .	Number	 0000007Eh   
VK_F16 . . . . . . . . . . . . .	Number	 0000007Fh   
VK_F17 . . . . . . . . . . . . .	Number	 00000080h   
VK_F18 . . . . . . . . . . . . .	Number	 00000081h   
VK_F19 . . . . . . . . . . . . .	Number	 00000082h   
VK_F1  . . . . . . . . . . . . .	Number	 00000070h   
VK_F20 . . . . . . . . . . . . .	Number	 00000083h   
VK_F21 . . . . . . . . . . . . .	Number	 00000084h   
VK_F22 . . . . . . . . . . . . .	Number	 00000085h   
VK_F23 . . . . . . . . . . . . .	Number	 00000086h   
VK_F24 . . . . . . . . . . . . .	Number	 00000087h   
VK_F2  . . . . . . . . . . . . .	Number	 00000071h   
VK_F3  . . . . . . . . . . . . .	Number	 00000072h   
VK_F4  . . . . . . . . . . . . .	Number	 00000073h   
VK_F5  . . . . . . . . . . . . .	Number	 00000074h   
VK_F6  . . . . . . . . . . . . .	Number	 00000075h   
VK_F7  . . . . . . . . . . . . .	Number	 00000076h   
VK_F8  . . . . . . . . . . . . .	Number	 00000077h   
VK_F9  . . . . . . . . . . . . .	Number	 00000078h   
VK_HELP  . . . . . . . . . . . .	Number	 0000002Fh   
VK_HOME  . . . . . . . . . . . .	Number	 00000024h   
VK_INSERT  . . . . . . . . . . .	Number	 0000002Dh   
VK_LBUTTON . . . . . . . . . . .	Number	 00000001h   
VK_LCONTROL  . . . . . . . . . .	Number	 000000A2h   
VK_LEFT  . . . . . . . . . . . .	Number	 00000025h   
VK_LMENU . . . . . . . . . . . .	Number	 000000A4h   
VK_LSHIFT  . . . . . . . . . . .	Number	 000000A0h   
VK_MENU  . . . . . . . . . . . .	Number	 00000012h   
VK_MULTIPLY  . . . . . . . . . .	Number	 0000006Ah   
VK_NEXT  . . . . . . . . . . . .	Number	 00000022h   
VK_NUMLOCK . . . . . . . . . . .	Number	 00000090h   
VK_NUMPAD0 . . . . . . . . . . .	Number	 00000060h   
VK_NUMPAD1 . . . . . . . . . . .	Number	 00000061h   
VK_NUMPAD2 . . . . . . . . . . .	Number	 00000062h   
VK_NUMPAD3 . . . . . . . . . . .	Number	 00000063h   
VK_NUMPAD4 . . . . . . . . . . .	Number	 00000064h   
VK_NUMPAD5 . . . . . . . . . . .	Number	 00000065h   
VK_NUMPAD6 . . . . . . . . . . .	Number	 00000066h   
VK_NUMPAD7 . . . . . . . . . . .	Number	 00000067h   
VK_NUMPAD8 . . . . . . . . . . .	Number	 00000068h   
VK_NUMPAD9 . . . . . . . . . . .	Number	 00000069h   
VK_PAUSE . . . . . . . . . . . .	Number	 00000013h   
VK_PRINT . . . . . . . . . . . .	Number	 0000002Ah   
VK_PRIOR . . . . . . . . . . . .	Number	 00000021h   
VK_RBUTTON . . . . . . . . . . .	Number	 00000002h   
VK_RCONTROL  . . . . . . . . . .	Number	 000000A3h   
VK_RETURN  . . . . . . . . . . .	Number	 0000000Dh   
VK_RIGHT . . . . . . . . . . . .	Number	 00000027h   
VK_RMENU . . . . . . . . . . . .	Number	 000000A5h   
VK_RSHIFT  . . . . . . . . . . .	Number	 000000A1h   
VK_SCROLL  . . . . . . . . . . .	Number	 00000091h   
VK_SEPARATER . . . . . . . . . .	Number	 0000006Ch   
VK_SHIFT . . . . . . . . . . . .	Number	 00000010h   
VK_SNAPSHOT  . . . . . . . . . .	Number	 0000002Ch   
VK_SPACE . . . . . . . . . . . .	Number	 00000020h   
VK_SUBTRACT  . . . . . . . . . .	Number	 0000006Dh   
VK_TAB . . . . . . . . . . . . .	Number	 00000009h   
VK_UP  . . . . . . . . . . . . .	Number	 00000026h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
buffer_hideFile  . . . . . . . .	Byte	 000F4240 _DATA	
buffer_showBmp . . . . . . . . .	Byte	 00000000 _DATA	
creatorinfo  . . . . . . . . . .	Byte	 002DCA51 _DATA	
cyan . . . . . . . . . . . . . .	Number	 00000003h   
decryptMsg . . . . . . . . . . .	Byte	 002DC9DA _DATA	
dinfo  . . . . . . . . . . . . .	Byte	 002DCAE2 _DATA	
einfo  . . . . . . . . . . . . .	Byte	 002DCAAF _DATA	
encryptMsg . . . . . . . . . . .	Byte	 002DC98D _DATA	
errMsg . . . . . . . . . . . . .	Byte	 001E84B6 _DATA	
errorMsg . . . . . . . . . . . .	Byte	 002DC965 _DATA	
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
fileType . . . . . . . . . . . .	Byte	 001E85DD _DATA	
file_path  . . . . . . . . . . .	Byte	 001E84C9 _DATA	
filename . . . . . . . . . . . .	Byte	 001E8480 _DATA	
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
hideFileLen  . . . . . . . . . .	DWord	 001E85D9 _DATA	
hideFilePtr  . . . . . . . . . .	DWord	 001E85D5 _DATA	
info1  . . . . . . . . . . . . .	Byte	 002DCA07 _DATA	
info2  . . . . . . . . . . . . .	Byte	 002DCA46 _DATA	
info3  . . . . . . . . . . . . .	Byte	 002DCA8E _DATA	
inputBuffer  . . . . . . . . . .	Byte	 002DC824 _DATA	
introinfo  . . . . . . . . . . .	Byte	 002DCA14 _DATA	
lastChar . . . . . . . . . . . .	Byte	 001E85DE _DATA	
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
prompt . . . . . . . . . . . . .	Byte	 002DC924 _DATA	
red  . . . . . . . . . . . . . .	Number	 00000004h   
showBmpLen . . . . . . . . . . .	DWord	 001E85D1 _DATA	
showBmpPtrTemp . . . . . . . . .	DWord	 001E85CD _DATA	
showBmpPtr . . . . . . . . . . .	DWord	 001E85C9 _DATA	
startFrom  . . . . . . . . . . .	DWord	 002DCB2E _DATA	
textMsg  . . . . . . . . . . . .	Byte	 002DC9B0 _DATA	
unHideFileType . . . . . . . . .	Byte	 002DC823 _DATA	
unHideFile . . . . . . . . . . .	Byte	 001E85DF _DATA	
unhideFileLen  . . . . . . . . .	DWord	 002DC81F _DATA	
white  . . . . . . . . . . . . .	Number	 0000000Fh   
wsprintf . . . . . . . . . . . .	Text   	 wsprintfA
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   0 Errors
